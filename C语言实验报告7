/******************************************************************
*******************************************************************
**@File:C语言实验报告7 
**@school:安徽中医药大学(少荃湖校区)
**@time:2022.04.10 
**@Author：Gblw_17
********************************************************************
*******************************************************************/

/**********************************************************************
***********************************************************************
注：可参考，但不是最优解法，尤其是最后几题，完全暴力解法，仅仅是能跑
动动脑子就会用更简单的解法

**
条条大路通罗马，希望给看到的人，需要的人一些参考；

**
每一道题目是什么，我都在前面打了注释；
每一个主函数都是一道题目；想要运行的话，
//把一对/* */删掉就好，一次只能运行一个，想要运行另一个的话
//一定要把删掉的那一对/* */补回去；

写在最后，如果抄作业的话，改一改函数名称，变量名字！
******************************************************************
*****************************************************************/


/*********************************************************************************
**********************************************************************************
************************************正文开始**************************************
**********************************************************************************
*********************************************************************************/
#include <stdio.h>
/**************************************************************************
***************************************************************************
**@题目：1、编写函数，求1+3+5+7+…+99的值。 
**@Sum_Two:函数思路，for循环，每一次加2，停止条件为 i<100即最后一次进入为99  
**@Sum: 每一次进入for循环，就把i的值加给Sum；在循环结束后就把Sum返回 
**
**注：写的没啥技术含量，能跑就行。 
***************************************************************************
**************************************************************************/ 
/*
int Sum_Two(void)
{
	int i,sum = 0;
	for(i=1;i<100;i+=2)
	{
		sum += i;
	}
	return sum;
} 
int main()
{
	int Sum;
	Sum = Sum_Two();
	printf("要求的值为%d",Sum);
	return 0;
}
*/ 


/**************************************************************************
***************************************************************************
**@题目：2、编写函数，求3个整数中的最大数。 
**@Max_There：一行代码实现三个数比大小；
**@思路：使用条件运算符实现，先比较传进来的三个参数中的两个的大小
**			在拿这俩个中较大的和第三个数比较； 
***************************************************************************
**************************************************************************/ 
/*
int Max_There(int a,int b,int c)
{
	return ((a<b ? b : a)< c ? c :( a<b ? b : a));
}

int main()
{
	int a,b,c;
	printf("请输入三个整数，数与数之间使用空格间隔开:>");
	scanf("%d %d %d",&a,&b,&c);
	printf("\n\n\n");
	c = Max_There(a,b,c);
	printf("三个数中最大的是%d",c);
	
	return 0;
}
*/


/*********************************************************************************************
**********************************************************************************************
**@题目：3、编写函数用递归计算斐波那契数列，main函数中输入n，调用该函数输出该数列第n项的值。
**
**@思路：所谓递归，就是把大化小，把小化了，斐波那契数列：1 1 2 3 5 8 13 ·· 
**@斐波那契数列：除了第一个数和第二个数，其他都是前俩个数的和； 
**@代码实现：在递归函数中；如果传进来的数为1，那就直接返回1，0，就直接返回 0
**					
**@举例：   计算第二个数，那么就会  返回 1+0；
**@本质：   所有的数子都是 1加起来的  
**@缺点：    当计算较大的数字时，程序会跑的非常慢，非常慢；可以自己跑一下；
**                        当计算第45项时，跑了11.6秒，共进入函数  3672623805次， 
**               所以使用递归输出斐波那契数列是非常慢的一种算法，更大的数字我没有去试
**					有兴趣的话可以试一下看看算一下比较大的数字会花多长时间，会进入多少次函数 
**********************************************************************************************
*********************************************************************************************/ 

/*
long long Flag = 0;
long long FibNAqi(int Num)
{
	Flag++;
	if(Num==0)
		return 0;
	if(Num == 1)
		return 1;
	else
		return 	FibNAqi(Num-1) + FibNAqi(Num-2);
}
int main()
{
	int Num;
	printf("请输入斐波那契数列的第几项:>");
	scanf("%d",&Num);
	printf("\n\n\n\n");
	printf("斐波那契数列的第%d项是%lld",Num,FibNAqi(Num));
	printf("\n\n计算第%d项共进入函数%lld次！！",Num,Flag);
	return 0;
}
*/


/**************************************************************************
***************************************************************************
**@题目：4、用递归实现：编写打印图形
**
**@思路：图形题，没啥说的，找规律就完事了； 
**		1.每一行的*数都是   2*行数-1；
**      2.每一行前面的空格都是比上一行少一个，少掉的一个就是多出来的*； 
** 		3.递归实现:每一次进入都只打一行，或者不打印；
**
**@举例 ；打印十行，就会进入11次； 
**@注：关于递归的理解，只有自己从，1，2，3，4，5，6，；一个参数一个参数的推演，才能明白原理；
**		自己瞎敲代码，胡思乱想，没有什么用！ 
***************************************************************************
**************************************************************************/ 
/* 
void tuxing(int i);
//用于输出每行前面的空格，使形状像正三角行，而不是直角三角形； 

int main()
{
	int Num;
	printf("请输入要打印的行数:>");
	scanf("%d",&Num);
	Hnagshu = Num-1;
	printf("\n\n"); 
	tuxing(Num);
	return 0;
}
void tuxing(int i)
{
	int j, k;
	if (i > 0)
		{
			i--;
			tuxing(i);
			for (j = Hnagshu; j > i; j--)
				printf(" ");
			for (k = 0; k < 2 * i + 1; k++)
				printf("*");
			printf("\n");
		}
	return;
}
*/



/**************************************************************************
***************************************************************************
**@题目：5、用递归实现字符串的逆序输出。
**
**@思路：使用全局变量存储输入的字符串 
** 
**@参数：参数是本次进入递归函数该打印的数组下标； 
**
**@递归实现：每一次进入，只要参数大于0，就打印数组中该下标的字符； 
***************************************************************************
**************************************************************************/ 
/*
//全局变量，不用传参，嘎嘎方便 
char Dat[100];

void Niexu(int i)
{
	if(i>0)
	{
		printf("%c",Dat[i]);
		Niexu(i-1);	
	}
	if(i==0)//递归一定要有停止条件，不然容易死循环 
	{
		printf("%c",Dat[0]);
		return;
	}
} 
int main()
{
	int Num,i;
	printf("请输入一个字符串:>");
	scanf("%s",Dat);
	Num = sizeof(Dat)/sizeof(Dat[0]);
	printf("逆序字符串为:>");
	
	//判断字符串的第几位为输入的最后一位； 
	for(i=0;i<Num;i++)
	{
		if(Dat[i] == '\0')
			break;
	}
	Niexu(i-1);	
	return 0;
}
*/


/**************************************************************************
***************************************************************************
**@题目：6、编写函数，实现在一个字符串中插入字符'm'。
**
**@思路：使用全局变量存储输入的字符串，然后把参数后的都往后挪一位 
**		暴力解法，没啥思路，不是啥好方法！ 			
**
**@参数：参数是要插入的'm'的位置 
**
**@函数实现：传一个参数，参数是要插入的数组下标，从后往前遍历
			 把所有的数据都往后挪一位，挪到要插入的位置后，将'm'赋值给那位
**
**@ 
***************************************************************************
**************************************************************************/ 
/*
char Dat[100];

void Str_Charu(int Num)
{
	int i;
	for(i=99;i>Num;i--)
	{
		Dat[i] = Dat[i-1];
	}
	Dat[Num] = 'm';
}
int main()
{
	int Num,i,j;
	printf("请输入一个字符串和要插入的位数(字符串与数字之间使用空格间隔开):>\n");
	printf("注：位数是指在第几位的后面，比如参数1，就是说要在原字符串的第一位的后面加一个'm'\n");
	scanf("%s %d",Dat,&j);
	Num = sizeof(Dat)/sizeof(Dat[0]);	
	for(i=1;i<Num;i++)
	{
		if(Dat[i-1] == '\0')
			break;
	}
	
	if(j>i || j<0) 
	{
		printf("请输入有效的参数");
		return 0; 
	}
	
	Str_Charu(j);
	printf("\n\n插入后的字符串:>%s",Dat);
	
	return 0;	
} 
*/


/**************************************************************************
***************************************************************************
**@题目：7、编写函数，连接两个字符串。
**
**@思路：使用指针，每一个字符串的结尾都是'\0',只要不遇到'\0'，就继续； 
**
**@参数：参数是三个指针，三个数组的地址； 
**
**@函数实现：将str1的数据除了'\0',之外的所有字符按顺序赋给 str;
**			在将str2的数据赋给str后面的位置，直到结束； 
**@ 
***************************************************************************
**************************************************************************/ 

/*
void Str_Link(char* Str1,char* Str2,char* Str)
{
	int i,j;
	for(i=0;i>=0;i++)
	{
		if(Str1[i]=='\0') break;
		Str[i] = Str1[i];
	}
	for(j=0;j>=0;j++,i++)
	{
		Str[i] = Str2[j];
		if(Str2[j] == '\0') break;
	}
} 

int main()
{
	char Str1[20],Str2[20],Str[40];
	printf("请输入要连接的两个字符串(两个字符串之间用空格间隔开):>\n");
	scanf("%s %s",Str1,Str2);
	
	Str_Link(Str1,Str2,Str); 
	
	printf("\n\n连接后的字符串:>\n%s",Str);
	return 0;
}

*/







